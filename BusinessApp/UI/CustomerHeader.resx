<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>