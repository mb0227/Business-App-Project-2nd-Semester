<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>